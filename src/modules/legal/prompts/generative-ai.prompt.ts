import { legalManager } from '@/modules/legal/legal.manager.js';
import {
  ButtonBuilder,
  ButtonStyle,
  ContainerBuilder,
  SeparatorSpacingSize,
} from 'discord.js';

// Register the generative AI consent scope
export const generativeAi = Object.freeze({
  scope: 'generative-ai',
  displayName: 'IA G√©n√©rative',
  commandName: 'ia-g√©n√©rative',
  commandDescription:
    "Donner ou retirer votre consentement √† l'utilisation de l'IA g√©n√©rative.",
  buildPrompt: () => {
    return new ContainerBuilder()
      .addTextDisplayComponents((textDisplay) =>
        textDisplay.setContent(
          "# üöÄ D√©bloquez les fonctionnalit√©s IA d'Isabelle !\n\n" +
            "Pour acc√©der aux commandes utilisant l'IA g√©n√©rative, et pour que les autres puissent les utiliser sur vous, votre autorisation est n√©cessaire.",
        ),
      )
      .addSeparatorComponents((separator) =>
        separator.setSpacing(SeparatorSpacingSize.Large).setDivider(true),
      )
      .addTextDisplayComponents((textDisplay) =>
        textDisplay.setContent(
          '## üßê Comment √ßa marche ?\n\n' +
            '- Les messages r√©cents envoy√©s sur ce serveur Discord peuvent √™tre transmis\n' +
            '- Aucun message priv√© ne sera transmis, ni les messages en dehors de ce serveur\n' +
            '- Ils ne seront jamais stock√©s par Isabelle\n' +
            '- Ils sont uniquement utilis√©s pour g√©n√©rer des r√©ponses\n' +
            "- Les conditions des services tiers s'appliquent\n\n" +
            "Pour plus de d√©tails, consultez les [conditions d'utilisation de l'API Gemini](https://ai.google.dev/gemini-api/terms?hl=fr#data-use-unpaid)",
        ),
      )
      .addSeparatorComponents((separator) =>
        separator.setSpacing(SeparatorSpacingSize.Large).setDivider(true),
      )
      .addTextDisplayComponents((textDisplay) =>
        textDisplay.setContent(
          '## üîë Votre consentement\n\n' +
            "Sans votre accord, vous ne pourrez **ni utiliser les fonctionnalit√©s d'IA, ni √™tre cibl√© par elles**.\n\n" +
            "Vous pourrez retirer votre consentement √† tout moment avec cette m√™me commande. Refuser n'impactera pas les autres fonctions du bot.",
        ),
      )
      .addActionRowComponents((actionRow) =>
        actionRow
          .addComponents(
            new ButtonBuilder()
              .setCustomId(
                legalManager.buildConsentButtonId('generative-ai', 'accept'),
              )
              .setLabel("J'accepte et je d√©bloque les fonctionnalit√©s d'IA")
              .setStyle(ButtonStyle.Success),
          )
          .addComponents(
            new ButtonBuilder()
              .setCustomId(
                legalManager.buildConsentButtonId('generative-ai', 'decline'),
              )
              .setLabel('Je refuse')
              .setStyle(ButtonStyle.Danger),
          ),
      );
  },
  buildConfirmation: (accepted: boolean) => {
    return new ContainerBuilder()
      .setAccentColor(accepted ? 0x57f287 : 0xed4245)
      .addTextDisplayComponents((textDisplay) =>
        textDisplay.setContent(
          accepted
            ? '# ‚úÖ Consentement enregistr√©\n\n' +
                "Merci ! Vous avez accept√© l'utilisation des fonctionnalit√©s d'IA g√©n√©rative.\n\n" +
                "Vous pouvez maintenant profiter de toutes les fonctionnalit√©s d'Isabelle, y compris celles utilisant l'IA g√©n√©rative.\n\n" +
                '_Vous pouvez modifier ce choix √† tout moment en utilisant √† nouveau la commande `/l√©gal consentir ia-g√©n√©rative`._'
            : '# ‚ùå Refus enregistr√©\n\n' +
                "Votre refus a √©t√© enregistr√©. Vous ne pourrez pas utiliser les fonctionnalit√©s d'IA g√©n√©rative.\n\n" +
                "Toutes les autres fonctionnalit√©s d'Isabelle restent disponibles pour vous.\n\n" +
                "_Vous pouvez changer d'avis √† tout moment en utilisant la commande `/l√©gal consentir ia-g√©n√©rative`._",
        ),
      );
  },
});
